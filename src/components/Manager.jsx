import React, { useEffect, useRef, useState } from "react";
import { FaEye } from "react-icons/fa";
import { FaEyeSlash } from "react-icons/fa";

import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

import { BiCopy } from "react-icons/bi";
import { useQuery } from "@tanstack/react-query";
import Swal from "sweetalert2";

const Manager = () => {
  const ref = useRef();
  const passref = useRef(null);
  const [status, setStatus] = useState(true);
  const [form, setForm] = useState({ site: "", username: "", password: "" });
  const [desPass,setDesPass]  = useState([])

  const { data: passwordArray, refetch } = useQuery({
    
    queryKey: ["passwordArray"],
    queryFn: async () => {
      const res = await fetch("http://localhost:3000/passwords");
      return res.json();
      
    },
  });

  
  

  

  // generated by chatGpt

  // const showPassword = () => {
  //   setStatus(!status);
  //   const passwordInput = passref.current;
  //   if (passwordInput) {
  //     passwordInput.type = status ? "password" : "text";
  //   }
  // };

  // const showPassword = () => {
  //   setStatus(!status);
  // };

  const savePassword = async () => {
    console.log(form);

    await fetch("http://localhost:3000/passwords", {
      method: "POST",
      headers: { "content-type": "application/json" },
      body: JSON.stringify(form),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        if (data.insertedId) {
          refetch()
          Swal.fire({
            position: "top-end",
            icon: "success",
            title: "Your password has been saved",
            showConfirmButton: false,
            timer: 1500
          });

          // refetch();
        }
      });
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleEdit = (id) => {

    // console.log(id)
    
    fetch(`http://localhost:3000/passwords/${id}`)
    .then(res => res.json())
    .then(data => {
      
      console.log(data.site);
      // setDesPass(data)
      setForm({site: `${data.site}` , username: `${data.username}` , password: `${data.password}`});

      console.log(setForm.site)
      

      
      
    })

    

  }

  const handleDelete = (id) => {
    
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        
        fetch(`http://localhost:3000/passwords/${id}`, {
          method: "DELETE",
        })
          .then((res) => res.json())
          .then((data) => {
            console.log(data);
            if(data.deletedCount > 0){
              refetch()
              Swal.fire({
                title: "Deleted!",
                text: "Your file has been deleted.",
                icon: "success"
              });
            }
          });
      }
    });
  };

  const copytext = (text) => {
    toast("Copy To Clipboard", {
      position: "top-right",
      autoClose: 3000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "dark",
    });
    navigator.clipboard.writeText(text);
  };

  // console.log(passwordArray)

  return (
    <>
      <ToastContainer
        position="top-right"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
      />

      <ToastContainer />
      <div className="absolute inset-0 -z-10 h-full w-full bg-white bg-[linear-gradient(to_right,#8080800a_1px,transparent_1px),linear-gradient(to_bottom,#8080800a_1px,transparent_1px)] bg-[size:14px_24px]"></div>

      <div className=" mx-auto  max-w-5xl mt-32">
        <h3 className="font-bold text-2xl text-center mb-4">
          <span className="text-green-600">&lt;</span>
          passop
          <span className="text-green-600">/&gt;</span>
        </h3>
        <p className="text-center text-green-700 text-lg">
          your own password manager
        </p>
        <div className="flex flex-col p-4 gap-6 text-black items-center">
          <input
            value={form.site || ''}
            onChange={handleChange}
            placeholder="Enter Wensite Url"
            className="rounded-full w-full border border-green-500 px-4 py-1"
            type="text"
            name="site"
            id=""
          />
          <div className="flex gap-6 w-full justify-between ">
            <input
              value={form.username}
              onChange={handleChange}
              placeholder="Enter Username"
              className="rounded-full w-full border border-green-500 px-4 py-1"
              type="text"
              name="username"
              id=""
            />

            {/* code generated by chat gpt */}

            <div className="relative">
              <input
                value={form.password}
                ref={passref}
                onChange={handleChange}
                placeholder="Enter Password"
                className="rounded-full w-full border border-green-500 px-4 py-1"
                type={status ? "password" : "text"}
                name="password"
              />
              {/* <div className="" onClick={showPassword}> */}
              <div  >
                <span className="absolute right-[6px] top-[8px] cursor-pointer">
                  {status ? <FaEye width={20} /> : <FaEyeSlash />}
                </span>
              </div>
            </div>
          </div>
          <button
            onClick={savePassword}
            className="flex justify-center items-center gap-3 bg-green-400 w-fit px-5 py-2 rounded-full"
          >
            <lord-icon
              src="https://cdn.lordicon.com/slmechys.json"
              trigger="hover"
            ></lord-icon>
            Save
          </button>
        </div>

        <div>
          <h3 className="text-2xl font-bold ">Your Passwords</h3>

          {passwordArray?.length === 0 && <div>No passwords to show</div>}

          {passwordArray?.length != 0 && (
            <table className="table-auto text-center mt-8 w-full overflow-hidden rounded-md">
              <thead className="bg-green-700 text-white">
                <tr>
                  <th className="py-2">Site</th>
                  <th className="py-2">User Name</th>
                  <th className="py-2">Password</th>
                  <th className="py-2">Action</th>
                </tr>
              </thead>
              <tbody className="bg-green-100">
                
                {passwordArray?.map((item, index) => {
                  
                  return (
                    
                    <tr key={index}>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.site}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.site)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.username}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.username)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.password}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.password)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <span onClick={() => handleEdit(item._id)} className="cursor-pointer mx-2">
                            <lord-icon
                              src="https://cdn.lordicon.com/fowixcuo.json"
                              trigger="hover"
                              // style="width:250px;height:250px"
                            ></lord-icon>
                          </span>

                          <span
                            onClick={() => handleDelete(item._id)}
                            className="cursor-pointer"
                          >
                            <lord-icon
                              src="https://cdn.lordicon.com/skkahier.json"
                              trigger="hover"
                              // style="width:250px;height:250px"
                            ></lord-icon>
                          </span>
                        </div>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          )}
        </div>
      </div>
    </>
  );
};

export default Manager;

// ------------------------- solve by chgatGPT --------------------
