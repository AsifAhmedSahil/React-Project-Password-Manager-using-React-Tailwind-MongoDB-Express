import React, { useEffect, useRef, useState } from "react";
import { FaEye } from "react-icons/fa";
import { FaEyeSlash } from "react-icons/fa";

import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

import { BiCopy } from "react-icons/bi";

const Manager = () => {
  // const ref = useRef()
  const passref = useRef(null);
  const [status, setStatus] = useState(true);
  const [form, setForm] = useState({ site: "", username: "", password: "" });
  const [passwordArray, setPasswordArray] = useState([]);

  useEffect(() => {
    let passwords = localStorage.getItem("passwords");
    if (passwords) {
      setPasswordArray(JSON.parse(passwords));
    }
  }, []);

  // generated by chatGpt

  const showPassword = () => {
    setStatus(!status);
    const passwordInput = passref.current;
    if (passwordInput) {
      passwordInput.type = status ? "password" : "text";
    }
  };

  const savePassword = () => {
    // console.log(form)
    setPasswordArray([...passwordArray, form]);
    localStorage.setItem("passwords", JSON.stringify([...passwordArray, form]));
    console.log(passwordArray);

    toast("Password Saved ", {
      position: "top-right",
      autoClose: 3000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "dark",
    });
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const copytext = (text) => {
    toast("Copy To Clipboard", {
      position: "top-right",
      autoClose: 3000,
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,
      theme: "dark",
    });
    navigator.clipboard.writeText(text);
  };
  return (
    <>
      <ToastContainer
        position="top-right"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
      />

      <ToastContainer />
      <div className="absolute inset-0 -z-10 h-full w-full bg-white bg-[linear-gradient(to_right,#8080800a_1px,transparent_1px),linear-gradient(to_bottom,#8080800a_1px,transparent_1px)] bg-[size:14px_24px]"></div>

      <div className=" mx-auto  max-w-5xl mt-32">
        <h3 className="font-bold text-2xl text-center mb-4">
          <span className="text-green-600">&lt;</span>
          passop
          <span className="text-green-600">/&gt;</span>
        </h3>
        <p className="text-center text-green-700 text-lg">
          your own password manager
        </p>
        <div className="flex flex-col p-4 gap-6 text-black items-center">
          <input
            value={form.site}
            onChange={handleChange}
            placeholder="Enter Wensite Url"
            className="rounded-full w-full border border-green-500 px-4 py-1"
            type="text"
            name="site"
            id=""
          />
          <div className="flex gap-6 w-full justify-between ">
            <input
              value={form.username}
              onChange={handleChange}
              placeholder="Enter Username"
              className="rounded-full w-full border border-green-500 px-4 py-1"
              type="text"
              name="username"
              id=""
            />

            {/* code generated by chat gpt */}

            <div className="relative">
              <input
                value={form.password}
                ref={passref}
                onChange={handleChange}
                placeholder="Enter Password"
                className="rounded-full w-full border border-green-500 px-4 py-1"
                type="password"
                name="password"
              />
              <div className="" onClick={showPassword}>
                <span className="absolute right-[6px] top-[8px] cursor-pointer">
                  {status ? <FaEye width={20} /> : <FaEyeSlash />}
                </span>
              </div>
            </div>
          </div>
          <button
            onClick={savePassword}
            className="flex justify-center items-center gap-3 bg-green-400 w-fit px-5 py-2 rounded-full"
          >
            <lord-icon
              src="https://cdn.lordicon.com/slmechys.json"
              trigger="hover"
            ></lord-icon>
            Save
          </button>
        </div>

        <div>
          <h3 className="text-2xl font-bold ">Your Passwords</h3>

          {passwordArray.length === 0 && <div>No passwords to show</div>}

          {passwordArray.length != 0 && (
            <table className="table-auto text-center mt-8 w-full overflow-hidden rounded-md">
              <thead className="bg-green-700 text-white">
                <tr>
                  <th className="py-2">Site</th>
                  <th className="py-2">User Name</th>
                  <th className="py-2">Password</th>
                  <th className="py-2">Action</th>
                </tr>
              </thead>
              <tbody className="bg-green-100">
                {passwordArray.map((item, index) => {
                  return (
                    <tr key={index}>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.site}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.site)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.username}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.username)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <a href={item.site} target="_blank">
                            {item.password}
                          </a>
                          <div
                            className="size-5 ml-5 cursor-pointer "
                            onClick={() => copytext(item.password)}
                          >
                            <BiCopy
                              style={{
                                width: "20px",
                                height: "20px",
                                paddingTop: "4px",
                              }}
                            />
                          </div>
                        </div>
                      </td>
                      <td className="py-2">
                        <div className="flex justify-center items-center ">
                          <span className="cursor-pointer mx-2">
                            <lord-icon
                              src="https://cdn.lordicon.com/fowixcuo.json"
                              trigger="hover"
                              // style="width:250px;height:250px"
                            ></lord-icon>
                          </span>

                          <span className="cursor-pointer">
                            <lord-icon
                              src="https://cdn.lordicon.com/skkahier.json"
                              trigger="hover"
                              // style="width:250px;height:250px"
                            ></lord-icon>
                          </span>
                        </div>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          )}
        </div>
      </div>
    </>
  );
};

export default Manager;
